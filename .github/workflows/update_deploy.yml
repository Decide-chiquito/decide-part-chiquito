name: Render

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'releases/*'

jobs:
  build:
    strategy:
      matrix:
        pyversion: [ '3.10' ]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.18-bullseye
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{matrix.pyversion}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.pyversion}}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies and config
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
        pip install codacy-coverage
        cp decide/local_settings.gactions.py decide/local_settings.py
    - name: Run migrations (unnecessary)
      run: |
        cd decide
        python manage.py makemigrations
        python manage.py migrate
    - name: Run tests
      run: |
        cd decide
        coverage run --branch --source=. ./manage.py test  --keepdb 
        coverage xml
      env:
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: ${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}
        SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: ${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }}
    - name: Pylint analysis
      run: |
        cd decide
        pylint --load-plugins pylint_django **/*.py --exit-zero

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy
      if: github.ref == 'refs/heads/deploy2'
      env:
        deploy_url: ${{secrets.RENDER_DEPLOY_HOOK_URL}}
      run: |
        curl "$deploy_url" 

