# Generated by Selenium IDE
import time
import json
from base.tests import BaseTestCase
from django.test import TestCase
from django.contrib.staticfiles.testing import StaticLiveServerTestCase

from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestFiltroname(StaticLiveServerTestCase):
  def setUp(self):
    self.base = BaseTestCase()
    self.base.setUp()
    options = webdriver.ChromeOptions()
    options.headless = True
    self.driver = webdriver.Chrome(options=options)
    super().setUp()
  
  def tearDown(self):
    super().tearDown()
    self.driver.quit()
    self.base.tearDown()
  
  def test_filtroname(self):
    self.driver.get("http://localhost:8000/")
    self.driver.set_window_size(1920, 1036)
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    self.driver.find_element(By.NAME, "username").click()
    self.driver.find_element(By.NAME, "username").send_keys("prueba")
    self.driver.find_element(By.NAME, "password").send_keys("admin")
    self.driver.find_element(By.NAME, "password").send_keys(Keys.ENTER)
    self.driver.find_element(By.LINK_TEXT, "Acceso").click()
    self.driver.find_element(By.ID, "name").click()
    self.driver.find_element(By.ID, "name").send_keys("Votaci贸n cerrada")
    self.driver.find_element(By.ID, "name").send_keys("Votaci贸n cerrada")
    self.driver.find_element(By.ID, "name").send_keys(Keys.ENTER)
    self.driver.find_element(By.ID, "name").send_keys("Votaci贸n creada")
    self.driver.find_element(By.ID, "name").send_keys("Votaci贸n creada")
    self.driver.find_element(By.ID, "name").send_keys(Keys.ENTER)
    self.driver.get("http://localhost:8000/logout")
    
class TestFiltrofecha(StaticLiveServerTestCase):
  def setUp(self):
    self.base = BaseTestCase()
    self.base.setUp()
    options = webdriver.ChromeOptions()
    options.headless = True
    self.driver = webdriver.Chrome(options=options)
    super().setUp()
  
  def tearDown(self):
    super().tearDown()
    self.driver.quit()
    self.base.tearDown()
  
  def test_filtrofecha(self):
    self.driver.get("http://localhost:8000/")
    self.driver.set_window_size(1392, 774)
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    self.driver.find_element(By.NAME, "username").send_keys("prueba")
    self.driver.find_element(By.NAME, "password").send_keys("admin")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Acceso").click()
    self.driver.find_element(By.ID, "start_date").click()
    self.driver.find_element(By.ID, "start_date").send_keys("2022-12-04")
    self.driver.find_element(By.ID, "end_date").click()
    self.driver.find_element(By.ID, "end_date").send_keys("2022-12-06")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.find_element(By.ID, "end_date").send_keys("")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.get("http://localhost:8000/logout")

class TestCerrado(StaticLiveServerTestCase):
  def setUp(self):
    self.base = BaseTestCase()
    self.base.setUp()
    options = webdriver.ChromeOptions()
    options.headless = True
    self.driver = webdriver.Chrome(options=options)
    super().setUp()
  
  def tearDown(self):
    super().tearDown()
    self.driver.quit()
    self.base.tearDown()
  
  def test_testCerrado(self):
    self.driver.get("http://localhost:8000/")
    self.driver.set_window_size(1392, 774)
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    self.driver.find_element(By.NAME, "username").send_keys("prueba")
    self.driver.find_element(By.NAME, "password").send_keys("admin")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Acceso").click()
    self.driver.find_element(By.CSS_SELECTOR, ".voting-card:nth-child(1) > p:nth-child(2) > strong").click()
    self.driver.get("http://localhost:8000/logout")
    # http://localhost:8000/visualizer/1/